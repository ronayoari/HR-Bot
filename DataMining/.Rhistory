lay <- layout.kamada.kawai(karate)
plot(karate, layout=lay)
#------------------------------------------------
# Community strucure via short random walks
fc <- walktrap.community(karate)
fc$modularity
##  [1]  0.000000 -0.038792 -0.026564 -0.015601 -0.003373 -0.007590  0.004723
##  [8]  0.013915  0.023360  0.044443  0.065188  0.085596  0.105667  0.125401
## [15]  0.136701  0.146315  0.157784  0.169084  0.179710  0.189998  0.199949
## [22]  0.221876  0.240597  0.256704  0.314724  0.315568  0.339180  0.360600
## [29]  0.378310  0.387165  0.376876  0.375443  0.359926  0.000000
max(fc$modularity)
## [1] 0.3872
# get the max modularity for this graph:
which.max(fc$modularity)
## [1] 30
memb <- igraph::modularity(fc)
memb
#------------------------------------------------
## $membership
##  [1] 1 1 0 1 3 3 3 1 0 0 3 1 1 1 0 0 3 1 0 1 0 1 0 2 2 2 0 2 0 0 0 0 0 0
##
## $csize
## [1] 15 10  4  5
plot(karate, layout=lay, vertex.size=5, vertex.label=NA,vertex.color=memb$membership+1, asp=FALSE)
memb <- igraph::modularity(fc$modularity)
memb <- fc$modularity
memb
plot(karate, layout=lay, vertex.size=5, vertex.label=NA,vertex.color=memb$membership+1, asp=FALSE)
output$currentTime <- renderText({invalidateLater(1000, session) #Here I will show the current time
paste("Current time is: ",Sys.time())})
install.packages("shiny")
output$currentTime <- tm::renderText({invalidateLater(1000, session) #Here I will show the current time
paste("Current time is: ",Sys.time())})
output$currentTime <- tm::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
output$currentTime <- renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
output$currentTime <- shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
output$currentTime <- shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
output$currentTime <- shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
output <- shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
library(shiny)
shiny::
shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",Sys.time())})
shiny::renderText({invalidateLater(1000, session) paste("Current time is: ",date())})
friends <- sig$getFriends()
user <- getUser('Orel_Swisa')
user <- twitteR::getUser('Orel_Swisa')
user <- twitteR::getUser('Orel_Swisa')
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
user <- twitteR::getUser('Orel_Swisa')
friends <- sig$getFriends()
friends <- user$getFriends()
friends
n<-20
friends <- sapply(friends.object[1:n],use)
friends <- sapply(friends.object[1:n],user)
friends <- sapply(friends.object[1:n],name)
name<-'Orel_Swisa'
friends <- sapply(friends.object[1:n],name)
name<-"Orel_Swisa"
friends <- sapply(friends.object[1:n],name)
followers <- sapply(followers.object[1:n],name)
termMatrix <- t(data_mining_tdm)
termMatrix[5:10,5:10]
View(dm)
View(m)
load(“data/termDocMatrix.rdata”)
load('data/termDocMatrix.rdata')
View(dm)
data_mining_tdm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 1, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
library(tm)
library(shiny)
require(twitteR)
dateAPI <- date()
dateAPI
consumer_key <- "sjqXRKHfR2rD5VSPlYyscGTv1"
consumer_secret <- "fwB8pwlkc9K1YnrdKHt7pyZN0WzgsHiAoKUJJ9VpxCsoLKilWe"
access_token <- "1493511710-wmaNFnHNyn2FbutPkHCCwq61XOqYyuO7ODh4nsf"
access_secret <- "hpV8u6PCmH2eJUPbkUnKHPjgvTtPb5FnfUal64AM9phuR"
# Connect Twitter account
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
```
Head of 500 tweets with the hashtag **#SuperClasico** from the **Mondial** date
```{r,echo=FALSE,message=FALSE,background='blue'}
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
data_mining_SuperClasico <- twListToDF(SuperClasico)
data_mining_SuperClasico2 = stringr::str_replace_all(data_mining_SuperClasico$text,"[^[:graph:]]", " ")
data_mining_corpus_SuperClasico = Corpus(VectorSource(data_mining_SuperClasico2))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 1, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
inspect(myDtm[266:270,31:40])
inspect(superclassico_dtm[266:270,31:40])
termMatrix <- superclassico_dtm %*% t(superclassico_dtm)
superclassico_dtm[266:270,31:40]
View(inspect(superclassico_dtm))
termMatrix <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm)
termMatrix <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
tm <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
tm[5:10,5:10]
View(m)
View(dm)
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirected')
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 6, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 20, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirected)
g <- simplify(g)
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
'/.'
.)
/
/
/
.
>
><kl,
4
7ui
k
dateAPI <- date()
dateAPI
superclasico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
library(tm)
require(twitteR)
superclasico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
View(inspect(superclasico_dtm))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
library(tm)
require(twitteR)
#user <- twitteR::getUser('Orel_Swisa')
#friends <- user$getFriends()
#friends
name<-"Orel_Swisa"
n<-20
# friends <- sapply(friends.object[1:n],name)
# followers <- sapply(followers.object[1:n],name)
superclasico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
# View(inspect(superclasico_dtm))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
egam <- (E(g)$weight+.4) / max(E(g)$weight+.4)
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
library(igraph)
egam <- (E(g)$weight+.4) / max(E(g)$weight+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
egam <- (E(g)$weight+.4) / max(E(g)$weight+.4)
E(g)$width <- egam
plot(g, layout=layout1,vertex.size=45)
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (E(g)$weight+.4) / max(E(g)$weight+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
plot(g, layout=layout1,vertex.size=45)
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn')]
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn')]
termsMet
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
#     plot(g, layout=layout1,vertex.size=15)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (E(g)$weight+.4) / max(E(g)$weight+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1,vertex.size=45)
egam <- (log(E(g)$weight+.4)) / max(log(E(g)$weight)+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
plot(g, layout=layout1,vertex.size=45)
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
plot(g, layout=layout1,vertex.size=30)
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 20:00', until = '2016-04-02 23:59')
library(tm)
require(twitteR)
dateAPI <- date()
consumer_key <- "sjqXRKHfR2rD5VSPlYyscGTv1"
consumer_secret <- "fwB8pwlkc9K1YnrdKHt7pyZN0WzgsHiAoKUJJ9VpxCsoLKilWe"
access_token <- "1493511710-wmaNFnHNyn2FbutPkHCCwq61XOqYyuO7ODh4nsf"
access_secret <- "hpV8u6PCmH2eJUPbkUnKHPjgvTtPb5FnfUal64AM9phuR"
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 20:00', until = '2016-04-02 23:59')
data_mining_SuperClasico <- twListToDF(SuperClasico)
data_mining_SuperClasico2 = stringr::str_replace_all(data_mining_SuperClasico$text,"[^[:graph:]]", " ")
data_mining_corpus_SuperClasico = tm::Corpus(VectorSource(data_mining_SuperClasico2))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn')]
termsMet
library(igraph)
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
plot(g, layout=layout1,vertex.size=30)
SuperClasico <- searchTwitter("#SuperClasico", n = 100 ,since = '2016-04-02 20:00', until = '2016-04-02 23:59')
data_mining_SuperClasico <- twListToDF(SuperClasico)
data_mining_SuperClasico2 = stringr::str_replace_all(data_mining_SuperClasico$text,"[^[:graph:]]", " ")
data_mining_corpus_SuperClasico = tm::Corpus(VectorSource(data_mining_SuperClasico2))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
termsMet[1:5,1:5]
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn')]
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano')]
SuperClasico <- searchTwitter("#SuperClasico", n = 200 ,since = '2016-04-02 20:00', until = '2016-04-02 23:59')
termsMet[1:5,1:5]
SuperClasico <- searchTwitter("#SuperClasico", n = 200 ,since = '2016-04-02 20:00', until = '2016-04-02 23:59')
data_mining_SuperClasico <- twListToDF(SuperClasico)
data_mining_SuperClasico2 = stringr::str_replace_all(data_mining_SuperClasico$text,"[^[:graph:]]", " ")
data_mining_corpus_SuperClasico = tm::Corpus(VectorSource(data_mining_SuperClasico2))
superclassico_dtm = TermDocumentMatrix(data_mining_corpus_SuperClasico, control = list(minWordLength = 4, removePunctuation=TRUE, stopwords = c(stopwords('english')), removeNumbers=TRUE,tolower=TRUE,stripWhitespace=TRUE))
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','gareth','bbc','msn')]
termsMet
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
plot(g, layout=layout1,vertex.size=30)
plot(g, layout=layout1,vertex.size=30)
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','bbc','msn')]
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
plot(g, layout=layout1,vertex.size=30)
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','sourez','cristiano','ronaldo','bale','benzema','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','sourez','cristiano','ronaldo','bale','benzema','bbc','msn')]
termsMet<-termsMet[c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','benzema','bbc','msn'),c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','benzema','bbc','msn')]
termsMet
g <- graph.adjacency(termsMet, weighted=TRUE, mode = 'undirecte')
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
g <- simplify(g)
V(g)$color <- "green"
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(2000)
layout1 <- layout.fruchterman.reingold(g)
#     plot(g, layout=layout1,vertex.size=15)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
#egam <- (log(E(g)$weight+.4)) / max(log(E(g)$weight)+.4)
#E(g)$color <- rgb(.5, .5, 0, egam)
#E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1,vertex.size=30)
termsMet <- inspect(superclassico_dtm) %*% t(inspect(superclassico_dtm))
te<-inspect(superclassico_dtm)
termsMet <- tw %*% t(te)
termsMet <- te %*% t(te)
termsRow<-c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','benzema','bbc','msn')
termsRCol<-termsRow
termsMet<-termsMet[termsRow,c('superclasico','madrid','realmadrid','barcelona','messi','neymar','cristiano','ronaldo','bale','benzema','bbc','msn')]
termsMet
t14<-length(SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-03 15:00'))
t14
t14<-length(searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 15:00'))
t14
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 15:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 18:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 23:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 21:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 14:00', until = '2016-04-02 22:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 21:00', until = '2016-04-02 22:00')
length(SuperClasico14)
SuperClasico22 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 22:00', until = '2016-04-02 23:00')
length(SuperClasico22)
SuperClasico23 <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 23:00', until = '2016-04-02 23:59')
length(SuperClasico23)
SuperClasico23 <- searchTwitter("#SuperClasico", n = 3,since = '2016-04-02 23:00', until = '2016-04-02 23:59')
length(SuperClasico23)
SuperClasico23 <- searchTwitter("#SuperClasico",since = '2016-04-02 23:00', until = '2016-04-02 23:59')
length(SuperClasico23)
SuperClasico21 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 00:00', until = '2016-04-02 21:00')
length(SuperClasico21)
SuperClasico24 <- searchTwitter("#SuperClasico", ,since = '2016-04-03 00:00', until = '2016-04-03 01:00')
SuperClasico24 <- searchTwitter("#SuperClasico",since = '2016-04-03 00:00', until = '2016-04-03 01:00')
length(SuperClasico24)
SuperClasico17 <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-03 02:00', until = '2016-04-03 18:00')
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 03:00')
length(SuperClasico24)
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 04:00')
length(SuperClasico24)
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 07:00')
length(SuperClasico24)
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 06:00')
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 06:00')
SuperClasico23 <- searchTwitter("#SuperClasico" ,since = '2016-04-02 23:00', until = '2016-04-02 23:59')
length(SuperClasico24)
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 05:00')
SuperClasico24 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 00:00', until = '2016-04-03 05:00')
length(SuperClasico24)
SuperClasico5 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 05:00', until = '2016-04-03 06:00')
length(SuperClasico5)
SuperClasico6 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 06:00', until = '2016-04-03 07:00')
length(SuperClasico6)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 08:00')
length(SuperClasico6)
length(SuperClasico7)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 09:00')
length(SuperClasico7)
length(SuperClasico7)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 11:00')
length(SuperClasico7)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 12:00')
length(SuperClasico7)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 13:00')
length(SuperClasico7)
SuperClasico7 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 07:00', until = '2016-04-03 12:00')
SuperClasico12 <- searchTwitter("#SuperClasico", ,since = '2016-04-03 12:00', until = '2016-04-03 13:00')
SuperClasico12 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 12:00', until = '2016-04-03 13:00')
length(SuperClasico13)
SuperClasico13 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 13:00', until = '2016-04-03 14:00')
length(SuperClasico13)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 14:00', until = '2016-04-03 15:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 14:00', until = '2016-04-03 16:00')
length(SuperClasico14)
SuperClasico14 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 14:00', until = '2016-04-03 19:00')
length(SuperClasico14)
SuperClasico19 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 19:00', until = '2016-04-03 21:00')
length(SuperClasico19)
SuperClasico19 <- searchTwitter("#SuperClasico" ,since = '2016-04-03 19:00', until = '2016-04-03 23:59')
length(SuperClasico19)
consumer_key <- "sjqXRKHfR2rD5VSPlYyscGTv1"
consumer_secret <- "fwB8pwlkc9K1YnrdKHt7pyZN0WzgsHiAoKUJJ9VpxCsoLKilWe"
access_token <- "1493511710-wmaNFnHNyn2FbutPkHCCwq61XOqYyuO7ODh4nsf"
access_secret <- "hpV8u6PCmH2eJUPbkUnKHPjgvTtPb5FnfUal64AM9phuR"
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
folder<-"rdatammining.Rdata.gz"
if(!file.exists(folder)){
rdmTweets <- userTimeline("rdatamining", n=100)
save(rdmTweets, file=folder, compress=TRUE)
} else{
load(folder)
}
library(twitteR)
library(tm)
rdmTweets <- userTimeline("rdatamining", n=100)
save(rdmTweets, file=folder, compress=TRUE)
head(rdmTweets)
df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
dim(df)
library(tm)
myCorpus <- Corpus(VectorSource(df$text))
myCorpus <- tm_map(myCorpus, tolower)
myCorpus <- tm_map(myCorpus, removePunctuation)
myStopwords <- c(stopwords('english'), "available", "via")
idx <- which(myStopwords == "r")
myStopwords <- myStopwords[-idx]
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
dictCorpus <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
inspect(myCorpus[1:3])
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
Needed <- c("tm", "SnowballCC", "RColorBrewer", "ggplot2", "wordcloud", "biclust", "cluster", "igraph", "fpc")
install.packages(Needed, dependencies=TRUE)
install.packages("Rcampdf", repos = "http://datacube.wu.ac.at/", type = "source")
install.packages("Rcampdf", repos="http://datacube.wu.ac.at/", type = "source")
library(tm)
cname <- file.path("C:", "texts")
dir(cname)
data("crude")
docs <- Corpus(DirSource(cname))
reut21578 <- system.file("texts", "crude", package = "tm")
docs<-VCorpus(DirSource(reut21578), list(reader =readReut21578XMLasPlain))
summary(docs)
inspect(docs[1]) # read the second document (for example)
docs <- tm_map(docs, removePunctuation)
inspect(docs[1]) # Check to see if it worked.
for(j in seq(docs))
{
docs[[j]] <- gsub("/", " ", docs[[j]])
docs[[j]] <- gsub("@", " ", docs[[j]])
docs[[j]] <- gsub("\\|", " ", docs[[j]])
}
inspect(docs[1]) # You can check a document (in this case the first) to see if it worked.
inspect(docs[1]) # read the second document (for example)
docs <- tm_map(docs, removePunctuation)
inspect(docs[1]) # Check to see if it worked.
for(j in seq(docs))
{
docs[[j]] <- gsub("/", " ", docs[[j]])
docs[[j]] <- gsub("@", " ", docs[[j]])
docs[[j]] <- gsub("\\|", " ", docs[[j]])
}
inspect(docs[1]) # You can check a document (in this case the first) to see if it worked.
docs <- tm_map(docs, removeNumbers)
inspect(docs[1]) # Check to see if it worked.
docs <- tm_map(docs, tolower)
inspect(docs[1]) # Check to see if it worked.
docs <- tm_map(docs, removeWords, stopwords("english"))
inspect(docs[1]) # Check to see if it worked.
docs <- tm_map(docs, removeWords, c("department", "email"))
for (j in seq(docs))
{
docs[[j]] <- gsub("qualitative research", "QDA", docs[[j]])
docs[[j]] <- gsub("qualitative studies", "QDA", docs[[j]])
docs[[j]] <- gsub("qualitative analysis", "QDA", docs[[j]])
docs[[j]] <- gsub("research methods", "research_methods", docs[[j]])
}
library(SnowballC)
docs <- tm_map(docs, stemDocument)
inspect(docs[1]) # Check to see if it worked.
docs <- tm_map(docs, stripWhitespace)
inspect(docs[1]) # Check to see if it worked.
docs <- tm_map(docs, PlainTextDocument)
dtm <- DocumentTermMatrix(docs)
dtm
tdm <- TermDocumentMatrix(docs)
tdm
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
Needed <- c("tm", "SnowballCC", "RColorBrewer", "ggplot2", "wordcloud", "biclust", "cluster", "igraph", "fpc")
install.packages(Needed, dependencies=TRUE)
install.packages(Needed, dependencies = TRUE)
freq <- sort(colSums(as.matrix(dtm)), decreasing=TRUE)
head(freq, 14)
findFreqTerms(dtm, lowfreq=30)   # Change "30" to whatever is most appropriate for your text data.
install.packages("Tex")
consumer_key <- "sjqXRKHfR2rD5VSPlYyscGTv1"
consumer_secret <- "fwB8pwlkc9K1YnrdKHt7pyZN0WzgsHiAoKUJJ9VpxCsoLKilWe"
access_token <- "1493511710-wmaNFnHNyn2FbutPkHCCwq61XOqYyuO7ODh4nsf"
access_secret <- "hpV8u6PCmH2eJUPbkUnKHPjgvTtPb5FnfUal64AM9phuR"
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
library(tm)
require(twitteR)
dateAPI <- date()
dateAPI
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
SuperClasico <- searchTwitter("#superslasico", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
SuperClasico <- searchTwitter("#I", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
SuperClasico <- searchTwitter("#a", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
sig <- twitteR::setup_twitter_oauth(consumer_key , consumer_secret, access_token, access_secret)
SuperClasico <- searchTwitter("#a", n = 500 ,since = '2016-04-02 00:00', until = '2016-04-03 00:00')
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2016-04-02 00:00', until = '2016-05-03 00:00')
SuperClasico <- searchTwitter("#SuperClasico", n = 500 ,since = '2015-04-02 00:00', until = '2016-05-03 00:00')
unzip("train.csv.zip")
train <- read_csv("train.csv")
rm(list = ls(all = TRUE))
setwd("C:\\Users\\Rona\\Documents\\GitHub\\DataMining")
library(readr)
unzip("train.csv.zip")
train <- read_csv("train.csv")
